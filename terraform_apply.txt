‚ùØ terraform apply                                                                                                                   1m 50s 16:49:29

An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.sandbox_vpc.aws_eip.nat_eip[0] will be created
  + resource "aws_eip" "nat_eip" {
      + allocation_id     = (known after apply)
      + association_id    = (known after apply)
      + domain            = (known after apply)
      + id                = (known after apply)
      + instance          = (known after apply)
      + network_interface = (known after apply)
      + private_dns       = (known after apply)
      + private_ip        = (known after apply)
      + public_dns        = (known after apply)
      + public_ip         = (known after apply)
      + public_ipv4_pool  = (known after apply)
      + tags              = {
          + "Name" = "sandbox_nat_eip"
        }
      + vpc               = true
    }

  # module.sandbox_vpc.aws_eip.nat_eip[1] will be created
  + resource "aws_eip" "nat_eip" {
      + allocation_id     = (known after apply)
      + association_id    = (known after apply)
      + domain            = (known after apply)
      + id                = (known after apply)
      + instance          = (known after apply)
      + network_interface = (known after apply)
      + private_dns       = (known after apply)
      + private_ip        = (known after apply)
      + public_dns        = (known after apply)
      + public_ip         = (known after apply)
      + public_ipv4_pool  = (known after apply)
      + tags              = {
          + "Name" = "sandbox_nat_eip"
        }
      + vpc               = true
    }

  # module.sandbox_vpc.aws_eip.nat_eip[2] will be created
  + resource "aws_eip" "nat_eip" {
      + allocation_id     = (known after apply)
      + association_id    = (known after apply)
      + domain            = (known after apply)
      + id                = (known after apply)
      + instance          = (known after apply)
      + network_interface = (known after apply)
      + private_dns       = (known after apply)
      + private_ip        = (known after apply)
      + public_dns        = (known after apply)
      + public_ip         = (known after apply)
      + public_ipv4_pool  = (known after apply)
      + tags              = {
          + "Name" = "sandbox_nat_eip"
        }
      + vpc               = true
    }

  # module.sandbox_vpc.aws_internet_gateway.internet_gw will be created
  + resource "aws_internet_gateway" "internet_gw" {
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Name" = "sandbox_internet_gw"
        }
      + vpc_id   = (known after apply)
    }

  # module.sandbox_vpc.aws_nat_gateway.nat_gw[0] will be created
  + resource "aws_nat_gateway" "nat_gw" {
      + allocation_id        = (known after apply)
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = {
          + "Name" = "sandbox_nat_gw"
        }
    }

  # module.sandbox_vpc.aws_nat_gateway.nat_gw[1] will be created
  + resource "aws_nat_gateway" "nat_gw" {
      + allocation_id        = (known after apply)
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = {
          + "Name" = "sandbox_nat_gw"
        }
    }

  # module.sandbox_vpc.aws_nat_gateway.nat_gw[2] will be created
  + resource "aws_nat_gateway" "nat_gw" {
      + allocation_id        = (known after apply)
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = {
          + "Name" = "sandbox_nat_gw"
        }
    }

  # module.sandbox_vpc.aws_route_table.lambda_function_rt[0] will be created
  + resource "aws_route_table" "lambda_function_rt" {
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                = "0.0.0.0/0"
              + egress_only_gateway_id    = ""
              + gateway_id                = ""
              + instance_id               = ""
              + ipv6_cidr_block           = ""
              + nat_gateway_id            = (known after apply)
              + network_interface_id      = ""
              + transit_gateway_id        = ""
              + vpc_peering_connection_id = ""
            },
        ]
      + tags             = {
          + "Name" = "sandbox_lambda_function_rt_a"
        }
      + vpc_id           = (known after apply)
    }

  # module.sandbox_vpc.aws_route_table.lambda_function_rt[1] will be created
  + resource "aws_route_table" "lambda_function_rt" {
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                = "0.0.0.0/0"
              + egress_only_gateway_id    = ""
              + gateway_id                = ""
              + instance_id               = ""
              + ipv6_cidr_block           = ""
              + nat_gateway_id            = (known after apply)
              + network_interface_id      = ""
              + transit_gateway_id        = ""
              + vpc_peering_connection_id = ""
            },
        ]
      + tags             = {
          + "Name" = "sandbox_lambda_function_rt_b"
        }
      + vpc_id           = (known after apply)
    }

  # module.sandbox_vpc.aws_route_table.lambda_function_rt[2] will be created
  + resource "aws_route_table" "lambda_function_rt" {
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                = "0.0.0.0/0"
              + egress_only_gateway_id    = ""
              + gateway_id                = ""
              + instance_id               = ""
              + ipv6_cidr_block           = ""
              + nat_gateway_id            = (known after apply)
              + network_interface_id      = ""
              + transit_gateway_id        = ""
              + vpc_peering_connection_id = ""
            },
        ]
      + tags             = {
          + "Name" = "sandbox_lambda_function_rt_c"
        }
      + vpc_id           = (known after apply)
    }

  # module.sandbox_vpc.aws_route_table.public_rt will be created
  + resource "aws_route_table" "public_rt" {
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + cidr_block                = "0.0.0.0/0"
              + egress_only_gateway_id    = ""
              + gateway_id                = (known after apply)
              + instance_id               = ""
              + ipv6_cidr_block           = ""
              + nat_gateway_id            = ""
              + network_interface_id      = ""
              + transit_gateway_id        = ""
              + vpc_peering_connection_id = ""
            },
        ]
      + tags             = {
          + "Name" = "sandbox_public_rt"
        }
      + vpc_id           = (known after apply)
    }

  # module.sandbox_vpc.aws_route_table_association.private_rta[0] will be created
  + resource "aws_route_table_association" "private_rta" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.sandbox_vpc.aws_route_table_association.private_rta[1] will be created
  + resource "aws_route_table_association" "private_rta" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.sandbox_vpc.aws_route_table_association.private_rta[2] will be created
  + resource "aws_route_table_association" "private_rta" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.sandbox_vpc.aws_route_table_association.public_rta[0] will be created
  + resource "aws_route_table_association" "public_rta" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.sandbox_vpc.aws_route_table_association.public_rta[1] will be created
  + resource "aws_route_table_association" "public_rta" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.sandbox_vpc.aws_route_table_association.public_rta[2] will be created
  + resource "aws_route_table_association" "public_rta" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.sandbox_vpc.aws_subnet.private_subnets[0] will be created
  + resource "aws_subnet" "private_subnets" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "us-east-1a"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "172.33.100.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "sandbox_private_subnet_a"
        }
      + vpc_id                          = (known after apply)
    }

  # module.sandbox_vpc.aws_subnet.private_subnets[1] will be created
  + resource "aws_subnet" "private_subnets" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "us-east-1b"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "172.33.110.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "sandbox_private_subnet_b"
        }
      + vpc_id                          = (known after apply)
    }

  # module.sandbox_vpc.aws_subnet.private_subnets[2] will be created
  + resource "aws_subnet" "private_subnets" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "us-east-1c"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "172.33.120.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = false
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "sandbox_private_subnet_c"
        }
      + vpc_id                          = (known after apply)
    }

  # module.sandbox_vpc.aws_subnet.public_subnets[0] will be created
  + resource "aws_subnet" "public_subnets" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "us-east-1a"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "172.33.10.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = true
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "sandbox_public_subnet_a"
        }
      + vpc_id                          = (known after apply)
    }

  # module.sandbox_vpc.aws_subnet.public_subnets[1] will be created
  + resource "aws_subnet" "public_subnets" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "us-east-1b"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "172.33.20.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = true
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "sandbox_public_subnet_b"
        }
      + vpc_id                          = (known after apply)
    }

  # module.sandbox_vpc.aws_subnet.public_subnets[2] will be created
  + resource "aws_subnet" "public_subnets" {
      + arn                             = (known after apply)
      + assign_ipv6_address_on_creation = false
      + availability_zone               = "us-east-1c"
      + availability_zone_id            = (known after apply)
      + cidr_block                      = "172.33.30.0/24"
      + id                              = (known after apply)
      + ipv6_cidr_block                 = (known after apply)
      + ipv6_cidr_block_association_id  = (known after apply)
      + map_public_ip_on_launch         = true
      + owner_id                        = (known after apply)
      + tags                            = {
          + "Name" = "sandbox_public_subnet_c"
        }
      + vpc_id                          = (known after apply)
    }

  # module.sandbox_vpc.aws_vpc.application_vpc will be created
  + resource "aws_vpc" "application_vpc" {
      + arn                              = (known after apply)
      + assign_generated_ipv6_cidr_block = false
      + cidr_block                       = "172.33.0.0/16"
      + default_network_acl_id           = (known after apply)
      + default_route_table_id           = (known after apply)
      + default_security_group_id        = (known after apply)
      + dhcp_options_id                  = (known after apply)
      + enable_classiclink               = false
      + enable_classiclink_dns_support   = (known after apply)
      + enable_dns_hostnames             = true
      + enable_dns_support               = true
      + id                               = (known after apply)
      + instance_tenancy                 = "default"
      + ipv6_association_id              = (known after apply)
      + ipv6_cidr_block                  = (known after apply)
      + main_route_table_id              = (known after apply)
      + owner_id                         = (known after apply)
      + tags                             = {
          + "Name" = "sandbox_application_vpc"
        }
    }

Plan: 24 to add, 0 to change, 0 to destroy.

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to approve.

  Enter a value: yes

module.sandbox_vpc.aws_vpc.application_vpc: Creating...
module.sandbox_vpc.aws_vpc.application_vpc: Creation complete after 7s [id=vpc-039b5f26544370e7d]
module.sandbox_vpc.aws_internet_gateway.internet_gw: Creating...
module.sandbox_vpc.aws_subnet.private_subnets[1]: Creating...
module.sandbox_vpc.aws_subnet.public_subnets[1]: Creating...
module.sandbox_vpc.aws_subnet.private_subnets[0]: Creating...
module.sandbox_vpc.aws_subnet.private_subnets[2]: Creating...
module.sandbox_vpc.aws_subnet.public_subnets[0]: Creating...
module.sandbox_vpc.aws_subnet.public_subnets[2]: Creating...
module.sandbox_vpc.aws_subnet.private_subnets[2]: Creation complete after 2s [id=subnet-0fd18a0a31022c1a9]
module.sandbox_vpc.aws_subnet.private_subnets[0]: Creation complete after 2s [id=subnet-06d7d8eed4d848056]
module.sandbox_vpc.aws_subnet.private_subnets[1]: Creation complete after 2s [id=subnet-02ae72be154685daa]
module.sandbox_vpc.aws_subnet.public_subnets[1]: Creation complete after 3s [id=subnet-0499b677f7bdc8609]
module.sandbox_vpc.aws_subnet.public_subnets[0]: Creation complete after 3s [id=subnet-0c86e605660d79003]
module.sandbox_vpc.aws_internet_gateway.internet_gw: Creation complete after 3s [id=igw-0b8c6922fbc5e69b2]
module.sandbox_vpc.aws_route_table.public_rt: Creating...
module.sandbox_vpc.aws_subnet.public_subnets[2]: Creation complete after 3s [id=subnet-0a3eec6ce65c3f826]
module.sandbox_vpc.aws_eip.nat_eip[1]: Creating...
module.sandbox_vpc.aws_eip.nat_eip[0]: Creating...
module.sandbox_vpc.aws_eip.nat_eip[2]: Creating...
module.sandbox_vpc.aws_eip.nat_eip[2]: Creation complete after 3s [id=eipalloc-007d13f4d01d67166]
module.sandbox_vpc.aws_eip.nat_eip[1]: Creation complete after 3s [id=eipalloc-056a8cdf102109699]
module.sandbox_vpc.aws_eip.nat_eip[0]: Creation complete after 3s [id=eipalloc-09e982d737ca02cfd]
module.sandbox_vpc.aws_nat_gateway.nat_gw[0]: Creating...
module.sandbox_vpc.aws_nat_gateway.nat_gw[1]: Creating...
module.sandbox_vpc.aws_nat_gateway.nat_gw[2]: Creating...
module.sandbox_vpc.aws_route_table.public_rt: Creation complete after 3s [id=rtb-0d7cfb2d67efd8190]
module.sandbox_vpc.aws_route_table_association.public_rta[2]: Creating...
module.sandbox_vpc.aws_route_table_association.public_rta[0]: Creating...
module.sandbox_vpc.aws_route_table_association.public_rta[1]: Creating...
module.sandbox_vpc.aws_route_table_association.public_rta[0]: Creation complete after 1s [id=rtbassoc-0f54d63a022a0398d]
module.sandbox_vpc.aws_route_table_association.public_rta[1]: Creation complete after 1s [id=rtbassoc-053880056c7c534ee]
module.sandbox_vpc.aws_route_table_association.public_rta[2]: Creation complete after 1s [id=rtbassoc-0f57d7b7d18dad6fe]
module.sandbox_vpc.aws_nat_gateway.nat_gw[1]: Still creating... [10s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[2]: Still creating... [10s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[0]: Still creating... [10s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[1]: Still creating... [20s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[0]: Still creating... [20s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[2]: Still creating... [20s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[1]: Still creating... [30s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[2]: Still creating... [30s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[0]: Still creating... [30s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[0]: Still creating... [40s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[2]: Still creating... [40s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[1]: Still creating... [40s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[2]: Still creating... [50s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[0]: Still creating... [50s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[1]: Still creating... [50s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[0]: Still creating... [1m0s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[1]: Still creating... [1m0s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[2]: Still creating... [1m0s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[1]: Still creating... [1m10s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[2]: Still creating... [1m10s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[0]: Still creating... [1m10s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[1]: Still creating... [1m20s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[0]: Still creating... [1m20s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[2]: Still creating... [1m20s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[2]: Still creating... [1m30s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[1]: Still creating... [1m30s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[0]: Still creating... [1m30s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[2]: Creation complete after 1m32s [id=nat-0100e9242c6e7e3dd]
module.sandbox_vpc.aws_nat_gateway.nat_gw[0]: Still creating... [1m40s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[1]: Still creating... [1m40s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[1]: Still creating... [1m50s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[0]: Still creating... [1m50s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[1]: Still creating... [2m0s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[0]: Still creating... [2m0s elapsed]
module.sandbox_vpc.aws_nat_gateway.nat_gw[0]: Creation complete after 2m3s [id=nat-0f3370cd222d9e81e]
module.sandbox_vpc.aws_nat_gateway.nat_gw[1]: Creation complete after 2m3s [id=nat-016e4fc030d4d1187]
module.sandbox_vpc.aws_route_table.lambda_function_rt[0]: Creating...
module.sandbox_vpc.aws_route_table.lambda_function_rt[1]: Creating...
module.sandbox_vpc.aws_route_table.lambda_function_rt[2]: Creating...
module.sandbox_vpc.aws_route_table.lambda_function_rt[1]: Creation complete after 3s [id=rtb-0764d088854ea1a5d]
module.sandbox_vpc.aws_route_table.lambda_function_rt[2]: Creation complete after 3s [id=rtb-03c20657950d4e3b5]
module.sandbox_vpc.aws_route_table.lambda_function_rt[0]: Creation complete after 3s [id=rtb-0985f4f337d5b2cd8]
module.sandbox_vpc.aws_route_table_association.private_rta[2]: Creating...
module.sandbox_vpc.aws_route_table_association.private_rta[0]: Creating...
module.sandbox_vpc.aws_route_table_association.private_rta[1]: Creating...
module.sandbox_vpc.aws_route_table_association.private_rta[0]: Creation complete after 1s [id=rtbassoc-0e1f67991fb42c4bf]
module.sandbox_vpc.aws_route_table_association.private_rta[2]: Creation complete after 1s [id=rtbassoc-016e32693b3ea031d]
module.sandbox_vpc.aws_route_table_association.private_rta[1]: Creation complete after 1s [id=rtbassoc-02ddc9d51b52e3518]

Apply complete! Resources: 24 added, 0 changed, 0 destroyed.

Outputs:

vpc_id = vpc-039b5f26544370e7d
